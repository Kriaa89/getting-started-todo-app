###################################################
# Advanced Docker Compose for Todo App
#
# Production-ready with security, monitoring, and performance optimizations
###################################################

services:
  ###################################################
  # Service: backend (Node.js API)
  ###################################################
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        NODE_ENV: ${NODE_ENV:-development}
    image: todo-app-backend:latest
    container_name: todo-backend
    hostname: backend
    environment:
      # Database configuration
      MYSQL_HOST: mysql
      MYSQL_USER: ${MYSQL_USER:-todouser}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-secure_password_change_me}
      MYSQL_DB: ${MYSQL_DB:-todos}

      # Application configuration
      NODE_ENV: ${NODE_ENV:-development}
      JWT_SECRET: ${JWT_SECRET:-change-this-in-production-use-long-random-string}
      PORT: 3000

      # Security headers
      HELMET_ENABLED: true
      RATE_LIMIT_ENABLED: true
      RATE_LIMIT_MAX: 100
      RATE_LIMIT_WINDOW_MS: 900000

      # Logging
      LOG_LEVEL: ${LOG_LEVEL:-info}
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "${BACKEND_PORT:-3000}:3000"
    volumes:
      - ./backend/src:/usr/local/app/src:ro
      - backend-logs:/usr/local/app/logs
    networks:
      - app-network
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,nodev,size=64m
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3000/api/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    mem_limit: 512m
    cpus: 1.0
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  ###################################################
  # Service: mysql (Database with optimizations)
  ###################################################
  mysql:
    image: mysql:9.3
    container_name: todo-mysql
    hostname: mysql
    command: >
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --max_connections=200
      --innodb_buffer_pool_size=256M
      --innodb_log_file_size=64M
    volumes:
      - todo-mysql-data:/var/lib/mysql
      - mysql-logs:/var/log/mysql
      - ./backend/init-db.sql:/docker-entrypoint-initdb.d/init.sql:ro
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-super_secret_root_password}
      MYSQL_DATABASE: ${MYSQL_DB:-todos}
      MYSQL_USER: ${MYSQL_USER:-todouser}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-secure_password_change_me}
      TZ: UTC
    networks:
      - app-network
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-p${MYSQL_ROOT_PASSWORD:-super_secret_root_password}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - DAC_OVERRIDE
      - SETGID
      - SETUID
    restart: unless-stopped
    mem_limit: 1g
    cpus: 2.0
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  ###################################################
  # Service: client (React Vite Frontend)
  ###################################################
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        NODE_ENV: ${NODE_ENV:-development}
    image: todo-app-client:latest
    container_name: todo-client
    hostname: client
    ports:
      - "${CLIENT_PORT:-5173}:5173"
    environment:
      - VITE_API_URL=${VITE_API_URL:-http://localhost:3000}
      - VITE_APP_NAME=Todo App
      - VITE_APP_VERSION=2.0.0
      - NODE_ENV=${NODE_ENV:-development}
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - ./client/src:/app/src:ro
      - ./client/public:/app/public:ro
      - ./client/index.html:/app/index.html:ro
      - ./client/vite.config.js:/app/vite.config.js:ro
      - node_modules_client:/app/node_modules
    networks:
      - app-network
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,nodev,size=128m
      - /app/.vite:exec,size=256m
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:5173",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    mem_limit: 512m
    cpus: 1.0
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  ###################################################
  # Service: nginx (Reverse Proxy & Load Balancer)
  ###################################################
  nginx:
    image: nginx:alpine
    container_name: todo-nginx
    hostname: nginx
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - nginx-cache:/var/cache/nginx
      - nginx-logs:/var/log/nginx
    depends_on:
      - backend
      - client
    networks:
      - app-network
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
      - NET_BIND_SERVICE
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    mem_limit: 256m
    cpus: 0.5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

###################################################
# Networks
###################################################
networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16

###################################################
# Volumes (Persistent Storage)
###################################################
volumes:
  todo-mysql-data:
    driver: local
    name: todo-mysql-data
  mysql-logs:
    driver: local
    name: mysql-logs
  backend-logs:
    driver: local
    name: backend-logs
  node_modules_client:
    driver: local
    name: node_modules_client
  nginx-cache:
    driver: local
    name: nginx-cache
  nginx-logs:
    driver: local
    name: nginx-logs
